// Generated by Dagger (https://dagger.dev).
package com.hidevelopers.sharepal.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApplicationContextFactory implements Factory<Context> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvideApplicationContextFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public Context get() {
    return provideApplicationContext(contextProvider.get());
  }

  public static AppModule_ProvideApplicationContextFactory create(
      Provider<Context> contextProvider) {
    return new AppModule_ProvideApplicationContextFactory(contextProvider);
  }

  public static Context provideApplicationContext(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideApplicationContext(context));
  }
}
