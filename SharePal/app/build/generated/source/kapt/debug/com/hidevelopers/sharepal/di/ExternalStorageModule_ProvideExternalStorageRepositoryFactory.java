// Generated by Dagger (https://dagger.dev).
package com.hidevelopers.sharepal.di;

import com.hidevelopers.sharepal.repository.ExternalStorageRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ExternalStorageModule_ProvideExternalStorageRepositoryFactory implements Factory<ExternalStorageRepository> {
  @Override
  public ExternalStorageRepository get() {
    return provideExternalStorageRepository();
  }

  public static ExternalStorageModule_ProvideExternalStorageRepositoryFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ExternalStorageRepository provideExternalStorageRepository() {
    return Preconditions.checkNotNullFromProvides(ExternalStorageModule.INSTANCE.provideExternalStorageRepository());
  }

  private static final class InstanceHolder {
    private static final ExternalStorageModule_ProvideExternalStorageRepositoryFactory INSTANCE = new ExternalStorageModule_ProvideExternalStorageRepositoryFactory();
  }
}
